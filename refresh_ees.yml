---
- name: rerun EE's and sincy with container image repo
  hosts: "{{ target_hosts }}"
  vars: 
    registry_url: quay.io/mbredeme
    base_image_registry_url: registry.redhat.io
    user_dir: /home/mbredeme 
    
  tasks:  
    - name: get EE projects
      shell:
        cmd: ls -d */
        chdir: "{{ user_dir }}/execution_environments"
      register: r_ee_list
      # EE projects are organized by folders ending with _ee

    - name: show r_ee_list
      debug:
        var: item [:-1]
      loop: "{{ r_ee_list.stdout_lines }}"
      when: item [:-1] != 'roles'
      # the ./roles folder is not an EE project

    - name: login to {{ base_image_registry_url }}
      containers.podman.podman_login:
        username: "{{ lookup('env', 'PORTAL_USERNAME') }}"
        password: "{{ lookup('env', 'PORTAL_PASSWORD') }}"
        registry: "{{ base_image_registry_url }}"
      # in order to pull down latest minimal rhel UBI

    - name: build EE's
      shell:
        cmd: ansible-builder build -v3 -t {{ registry_url }}/{{ item [:-1] }}
        chdir: /home/mbredeme/execution_environments/{{ item [:-1] }}
      loop: "{{ r_ee_list.stdout_lines }}"
      when: item [:-1] != 'roles'

    - name: login to {{registry_url}}
      containers.podman.podman_login:
        username: "{{ lookup('env', 'PORTAL_USERNAME') }}"
        password: "{{ lookup('env', 'PORTAL_PASSWORD') }}"
        registry: "{{ registry_url }}"

    - debug: 
        msg: 
          - place holder to ensure EE directoies exist in {{registry_url}} (using api)
          - for now ensure project exists in {{registry_url}}<ee_name>_ee

    - name: push images to {{registry_url}}
      shell:
        cmd: podman push {{ registry_url }}/{{ item [:-1] }}
        chdir: /home/mbredeme/execution_environments/{{ item [:-1] }}
      loop: "{{ r_ee_list.stdout_lines }}"
      when: item [:-1] != 'roles'

    - debug: 
        msg: 
          - place holder to ensure EE's are loaded into tower
          - perhaps in another playbook so it can be reused